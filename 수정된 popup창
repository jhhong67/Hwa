using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using WeifenLuo.WinFormsUI.Docking;
using System.Collections;
using FarPoint.Win.Spread;
using System.Text.RegularExpressions;
using Hwacheon;

namespace HwacheonApp
{
    public partial class B3DC01A2Sub_SW : Form
    {
        Hwa Hwa = new Hwa();
        Num Num = new Num();

        SheetView[] spd;
        SheetView spdC;
        public string Itnbr, JobDate = "";

        public B3DC01A2Sub_SW()
        {
            InitializeComponent();
            spd = new SheetView[] { spdData.ActiveSheet, spdData2.ActiveSheet };
            spdC = spdData3.ActiveSheet;
        }

        private void Form_Load(object sender, EventArgs e)
        {
            label3.Text = label3.Text.Replace("@@", Hwa.CvtDate(JobDate).ToString("MM"));
            lblTitle.Text = lblTitle.Text.Replace("@@", Num.DateFormat(JobDate).Replace("/", "."));

            ReadData();

        }


        private void ReadData()
        {
            string strSql = "";
            strSql = " Declare @JobDate varchar(8) = '" + JobDate + "'" + "\r"
                   + "  Select Case  When item_goja='U'  then 'A' When item_goja='V' Then 'B' " + "\r"
                   + "              When item_goja = '1'  then 'C' End Gub" + "\r"
                   + "         ,(select vndName from AFACMAN..aavndor Z where A.cusno = Z.vndnr) vndName" + "\r"
                   + "         ,(select StItd from AAstkij Z where A.KStItn = Z.stitn And A.item_goja = Z.FacId )kiname" + "\r"
                   + "         ,(select sawon_name from smm002 Z where A.sawon_id = Z.sawon_id And tesa_chk<>'T')sawonNm" + "\r"
                   + "         ,(select pame_name from smm004 Z where A.pame_id = Z.pame_id)pame_name" + "\r"
                   + "         ,(select pame_seq from smm004 Z where A.pame_id = Z.pame_id)pame_seq" + "\r"
                   + "         ,ISNULL(suju_Qty, 0) as suju_Qty,(suju_amt / 1.1) suju_amt, suju_date, A.sawon_id,suju_stat stat, dued_date" + "\r"
                   + "    From SCH001 A" + "\r"
                   + "   Where item_goja in('U', 'V', '1') And MSGub = 'M'  And SjChk<>'N' And suju_stat<>'6' And Suju_date = @JobDate" + "\r"
                   + "   Order by gub, pame_seq, sawon_id" + "\r"
                   + "\r";

            strSql += " Select suju_Qty,(suju_amt/1.1) suju_amt, suju_date, A.sawon_id,FIpRsn,ManuLang,DCusNo,PlateLang" + "\r"
                   + "                 ,Case When item_goja = 'U'  then 'A' When item_goja = 'V' Then 'B'" + "\r"
                   + "                       When item_goja = '1'  then 'C' End Gub" + "\r"
                   + "                 ,(select vndName from AFACMAN..aavndor Z where A.cusno = Z.vndnr) vndName" + "\r"
                   + "                 ,(select StItd from AAstkij Z where A.KStItn = Z.stitn And A.item_goja = Z.FacId )kiname" + "\r"
                   + "                 ,(select sawon_name from smm002 Z where A.sawon_id = Z.sawon_id And tesa_chk<>'T')sawonNm" + "\r"
                   + "                 ,(select pame_name from smm004 Z where A.pame_id = Z.pame_id)pame_name" + "\r"
                   + "                 ,(select pame_seq from smm004 Z where A.pame_id = Z.pame_id)pame_seq, dued_date, sugum_sum" + "\r"
                   + "          Into #JobTbl " + "\r"
                   + "    From VW_SCH001Allsu A" + "\r"
                   + "   Where item_goja in('U', 'V', '1')  And MSGub = 'M' And ConfStat In('@', 'A', 'B', 'C', 'W', 'X', 'F') And suju_stat<>'6' And update_chk<>'X'" + "\r"
                   + "         And Not Exists(Select * From SCH001 Z Where Z.suju_no = A.suju_no)" + "\r"
                   + "         Select* From #JobTbl Order by gub, pame_seq, sawon_id" + "\r"
                   + "         Drop table #JobTbl" + "\r"
                   + "\r";

            strSql += " Declare @JobMDate varchar(6) = '" + Hwa.Left(JobDate, 6) + "'" + "\r"
                   + "  Select Case  When item_goja='U'  then 'A' When item_goja='V' Then 'B'" + "\r"
                   + "                When item_goja = '1'  then 'C' End Gub" + "\r"
                   + "                 , sum(suju_Qty)suju_Qty,sum(suju_amt) suju_amt" + "\r"
                   + "          From SCH001 A" + "\r"
                   + "   Where item_goja in('U', 'V', '1') And MSGub = 'M'  And SjChk<>'N' And suju_stat<>'6'  And Suju_date like  @JobMDate + '%'" + "\r"
                   + "   Group by A.item_goja" + "\r"
                   + "   Order by Gub" + "\r"
                   + "\r";

            //SelectObj recObj = new SelectObj(HwaDb.SDb, strSql);
            HwaSql recObj = new HwaSql(HwaDb.SDb, strSql);

            string Gub = "";
            //int no = 0;

            int totalQty = 0;
            double totalAmt = 0, totalSAmt = 0;
            HwaDb.color _color = new HwaDb.color();
            for (int pp = 0; pp < 2; pp++)
            {
                totalQty = 0; totalAmt = 0; totalSAmt = 0;

                spd[pp].RowCount = 0;
                while (recObj.NotEOF)
                {
                    Gub = Hwa.Trim(recObj["Gub"]);
                    int no = 0;
                    int subtotalQty = 0;
                    double subtotalAmt = 0;
                    double subSuAmt = 0;

                    subtotalQty = 0; subtotalAmt = 0;
                    int stCnt = spd[pp].RowCount;
                    while (recObj.NotEOF)
                    {
                        if (Gub != Hwa.Trim(recObj["Gub"])) break;

                        int rowPp = spd[pp].RowCount++;
                        spd[pp].RowHeader.Cells[rowPp, 0].Text = Num.NumFormat(++no);
                        spd[pp].Cells[rowPp, 0].Value = (Gub == "A") ? "광주"
                                                  : (Gub == "B") ? "창원"
                                                  : (Gub == "C") ? "OEM"
                                                  : "Gub : " + Gub
                                                  ; ;
                        spd[pp].Cells[rowPp, 1].Value = Hwa.Trim(recObj["pame_name"]);
                        spd[pp].Cells[rowPp, 2].Value = Hwa.Trim(recObj["sawonNm"]);
                        spd[pp].Cells[rowPp, 3].Value = Hwa.Trim(recObj["vndName"]);
                        spd[pp].Cells[rowPp, 4].Value = Hwa.Trim(recObj["kiname"]);

                        int sujuQty = Hwa.CvtInt(recObj["suju_Qty"]);
                        double sujuAmt = Hwa.CvtDouble(recObj["suju_amt"]);

                        spd[pp].Cells[rowPp, 5].Value = Num.NumFormat(sujuQty);
                        spd[pp].Cells[rowPp, 6].Value = Num.NumFormat(sujuAmt);
                        spd[pp].Cells[rowPp, 7].Value = Num.DateFormat(recObj["dued_date"]);

                        if (pp == 1)
                        {
                            double sugum = Hwa.CvtDouble(recObj["sugum_sum"]);
                            spd[pp].Cells[rowPp, 8].Value = Num.NumFormat(sugum);
                            subSuAmt += sugum;
                        }
                        // 소계 계산
                        subtotalQty += sujuQty;
                        subtotalAmt += sujuAmt;
                        recObj.MoveNext();
                    }
                    spd[pp].AddSpanCell(stCnt, 0, spd[pp].RowCount - stCnt, 1);     // 공장 Span

                    // 각 Gub 별 소계 행 추가
                    int sumPp = spd[pp].RowCount++;
                    spd[pp].RowHeader.Cells[sumPp, 0].Text = " ";
                    spd[pp].Cells[sumPp, 0].Value = " 소계";
                    spd[pp].Cells[sumPp, 0].ColumnSpan = 5;
                    // spd.Cells[sumPp, 0].HorizontalAlignment = CellHorizontalAlignment.Center;
                    spd[pp].Cells[sumPp, 5].Value = Num.NumFormat(subtotalQty);
                    spd[pp].Cells[sumPp, 6].Value = Num.NumFormat(subtotalAmt);
                    if (pp == 1) spd[pp].Cells[sumPp, 8].Value = Num.NumFormat(subSuAmt);

                    spd[pp].Rows[sumPp].BackColor = _color.소계;  // (new HwaDb.color()).소계;
                    
                    // suju_Qty와 suju_amt 값을 누적
                    totalQty += subtotalQty;
                    totalAmt += subtotalAmt;
                    if (pp == 1) totalSAmt += subSuAmt;

                    // 다음 Gub로 넘어가기 전에 추가된 행의 인덱스 저장
                }

                int totPp = spd[pp].RowCount++;
                spd[pp].RowHeader.Cells[totPp, 0].Text = " ";
                spd[pp].Cells[totPp, 0].Value = "합계";
                // spd.Cells[rowTotal, 0].HorizontalAlignment = CellHorizontalAlignment.Center;
                spd[pp].Cells[totPp, 0].ColumnSpan = 5;
                spd[pp].Cells[totPp, 5].Value = Num.NumFormat(totalQty);
                spd[pp].Cells[totPp, 6].Value = Num.NumFormat(totalAmt);
                if (pp == 1) spd[pp].Cells[totPp, 8].Value = Num.NumFormat(totalSAmt);
                spd[pp].SetRowHeight(totPp, 25);
                spd[pp].Rows[totPp].BackColor = _color.합계;

                recObj.NextResult();
            }

            //totalQty = 0; totalAmt = 0; 
            //while (!recObj.EOF)
            //{
            //    Gub = Hwa.Trim(recObj["Gub"]);
            //    int subtotalQty = 0;
            //    double subtotalAmt = 0;
            //    while (!recObj.EOF)
            //    {
            //        if (Gub != Hwa.Trim(recObj["Gub"])) break;

            //        int rowPp = spdB.RowCount++;
            //        spdB.Cells[rowPp, 0].Value =(Gub == "A") ? "광주"
            //                                  : (Gub == "B") ? "창원"
            //                                  : (Gub == "C") ? "OEM"
            //                                  : "Gub : " + Gub
            //                                  ; ;
            //        spdB.Cells[rowPp, 1].Value = Hwa.Trim(recObj["pame_name"]);
            //        spdB.Cells[rowPp, 2].Value = Hwa.Trim(recObj["sawonNm"]);
            //        spdB.Cells[rowPp, 3].Value = Hwa.Trim(recObj["vndName"]);
            //        spdB.Cells[rowPp, 4].Value = Hwa.Trim(recObj["kiname"]);
            //        spdB.Cells[rowPp, 5].Value = Hwa.Trim(recObj["suju_Qty"]);
            //        spdB.Cells[rowPp, 6].Value = Num.NumFormat(recObj["suju_amt"]);
            //        spdB.Cells[rowPp, 7].Value = Num.DateFormat(recObj["dued_date"]);

            //        totalQty += int.Parse(Hwa.Trim(recObj["suju_Qty"]));
            //        totalAmt += double.Parse(Hwa.Trim(recObj["suju_amt"]));
            //        totalSAmt += double.Parse(Hwa.Trim(recObj["sugum_sum"]));
            //        subtotalQty += int.Parse(Hwa.Trim(recObj["suju_Qty"]));
            //        subtotalAmt += double.Parse(Hwa.Trim(recObj["suju_amt"]));
            //        subtotalSAmt += double.Parse(Hwa.Trim(recObj["sugum_sum"]));

            //        recObj.MoveNext();
            //    }
            //    spdB.AddSpanCell(stCnt, 0, rowPp - stCnt + 1, 1);
            //    stCnt = rowPp + 1;

            //    // 각 Gub 별 소계 행 추가
            //    int subtotalRow2 = spdB.RowCount++;
            //    spdB.Cells[subtotalRow2, 0].Value = " 소계";
            //    spdB.Cells[subtotalRow2, 0].ColumnSpan = 5;
            //    spdB.Cells[subtotalRow2, 0].HorizontalAlignment = CellHorizontalAlignment.Left;
            //    spdB.Cells[subtotalRow2, 5].Value = Num.NumFormat(subtotalQty);
            //    spdB.Cells[subtotalRow2, 6].Value = Num.NumFormat(subtotalAmt);
            //    spdB.Cells[subtotalRow2, 8].Value = Num.NumFormat(subtotalSAmt);
            //    spdB.RowHeader.Cells[subtotalRow2, 0].Text = Num.Format(++no, "0");
            //    spdB.Rows[subtotalRow2].BackColor = Color.PowderBlue;

            //    // 다음 Gub로 넘어가기 전에 추가된 행의 인덱스 저장
            //    stCnt = rowPp + 1;
            //}
            //int rowTotal2 = spdB.RowCount;
            //spdB.RowCount++;
            //spdB.Cells[rowTotal2, 0].Value = "합계";
            //spdB.Cells[rowTotal2, 0].HorizontalAlignment = CellHorizontalAlignment.Center;
            //spdB.Cells[rowTotal2, 0].ColumnSpan = 5;
            //spdB.Cells[rowTotal2, 5].Value = Num.NumFormat(totalQty);
            //spdB.Cells[rowTotal2, 6].Value = Num.NumFormat(totalAmt);
            //spdB.Cells[rowTotal2, 8].Value = Num.NumFormat(totalSAmt);
            //spdB.SetRowHeight(rowTotal2, 25);
            //spdB.Rows[rowTotal2].BackColor = Color.Yellow;
            //recObj.NextResult();

            spdC.RowCount = 0;
            totalQty = 0; totalAmt = 0; totalSAmt = 0;
            //while (recObj.Read())
            while (recObj.NotEOF)
            {
                int rowPp = spdC.RowCount++;
                Gub = Hwa.Trim(recObj["Gub"]);
                spdC.Cells[rowPp, 0].Value = (Gub == "A") ? "광주"
                                          : (Gub == "B") ? "창원"
                                          : (Gub == "C") ? "OEM"
                                          : "Gub : " + Gub
                                          ; ;
                spdC.Cells[rowPp, 1].Value = Num.NumFormat(recObj["suju_Qty"]);
                spdC.Cells[rowPp, 2].Value = Num.NumFormat(recObj["suju_amt"]);
                totalQty += int.Parse(Hwa.Trim(recObj["suju_Qty"]));
                totalAmt += double.Parse(Hwa.Trim(recObj["suju_amt"]));
                recObj.MoveNext();
            }

            int rowTotal3 = spdC.RowCount++;
            spdC.RowHeader.Cells[rowTotal3, 0].Text = " ";
            spdC.Cells[rowTotal3, 0].Value = "합계";
            spdC.Cells[rowTotal3, 0].HorizontalAlignment = CellHorizontalAlignment.Center;
            spdC.Cells[rowTotal3, 1].Value = Num.NumFormat(totalQty);
            spdC.Cells[rowTotal3, 2].Value = Num.NumFormat(totalAmt);
            spdC.SetRowHeight(rowTotal3, 25);
            spdC.Rows[rowTotal3].BackColor = Color.Yellow;
            recObj.Close();

            spdC.SetRowHeight(-1, 25);
            recObj.Close();
        }

        private void btnExit_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void btnExit_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Escape)
            {
                this.Close();
            }
        }

    }
}

